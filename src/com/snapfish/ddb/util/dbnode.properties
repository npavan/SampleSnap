# This section is formatted as follows:
#
# nodename.NODENAME=<index>
# for example:
# nodename.SFOPRD01=0
# nodename.SFOPRD02=1
# nodename.SFOPRD06=2
# which says SFOPRD01 is the first node
#  SFOPRD02 is the second, etc.
nodename.SFODEV01=0


# LRU cache properties
acct.cache.size=100000
email.cache.size=20
wgemail.cache.size=20

oid.cache.size=2000
sub.cache.size=100000

room.oid.cache.size=100000
room.url.cache.size=20

# migrating node setup
# set these keys if there is a node getting migrated
# all the cached data for the node will be removed every
# cleanup interval (in ms)
# e.x.
# migrating.node=SFOPRD01
# cleanup.interval=60000


# The list of nodes that maintain the acct_mapping
lookup.nodes=0

# The maximum node index in the system
max.nodes=100

# distribution within nodes expanded
#      nodeids=0,1
# nodeids.dist=3,2
# node 0 will get 3/5 the accounts
# node 1 will get 2/5 the accounts
# if ANY of the primary nodes that randomly get
#  selected are down the fallback nodes will be used.
#  Because of this, if there are multiple primary
#  nodes it's a good idea to put them both in the
#  fallback nodes. The fallback nodes are all tried
#  in sequence.
distributable.website.or.cobrand.ids=1000000,1000001,1000002,1000003,1000004,1000005,1000006,1000007,1000008,1000009,2000001,2000002,2000003,2000004,2000005,2000006,2000007,2000008,2000009,2000010,2000011,2000012,2000013,2000014,2000015,2000016,2000017,2000018,2000019,2000031,2000041,2000044,2000047,2000052,2000055,2000056,2000057,2000060


2000052.nodeids=0
2000052.nodeids.dist=1
2000052.nodeids.fallback=0

2000044.nodeids=0
2000044.nodeids.dist=1
2000044.nodeids.fallback=0

2000008.nodeids=0
2000008.nodeids.dist=1
2000008.nodeids.fallback=0

2000001.nodeids=0
2000001.nodeids.dist=1
2000001.nodeids.fallback=0

2000014.nodeids=0
2000014.nodeids.dist=1
2000014.nodeids.fallback=0

1000005.nodeids=0
1000005.nodeids.dist=1
1000005.nodeids.fallback=0

2000003.nodeids=0
2000003.nodeids.dist=1
2000003.nodeids.fallback=0

1000000.nodeids=0
1000000.nodeids.dist=1
1000000.nodeids.fallback=0

2000057.nodeids=0
2000057.nodeids.dist=1
2000057.nodeids.fallback=0

2000007.nodeids=0
2000007.nodeids.dist=1
2000007.nodeids.fallback=0

2000009.nodeids=0
2000009.nodeids.dist=1
2000009.nodeids.fallback=0

2000047.nodeids=0
2000047.nodeids.dist=1
2000047.nodeids.fallback=0

2000017.nodeids=0
2000017.nodeids.dist=1
2000017.nodeids.fallback=0

2000055.nodeids=0
2000055.nodeids.dist=1
2000055.nodeids.fallback=0

2000005.nodeids=0
2000005.nodeids.dist=1
2000005.nodeids.fallback=0

1000004.nodeids=0
1000004.nodeids.dist=1
1000004.nodeids.fallback=0

2000041.nodeids=0
2000041.nodeids.dist=1
2000041.nodeids.fallback=0

1000001.nodeids=0
1000001.nodeids.dist=1
1000001.nodeids.fallback=0

2000056.nodeids=0
2000056.nodeids.dist=1
2000056.nodeids.fallback=0

2000004.nodeids=0
2000004.nodeids.dist=1
2000004.nodeids.fallback=0

1000002.nodeids=0
1000002.nodeids.dist=1
1000002.nodeids.fallback=0

2000010.nodeids=0
2000010.nodeids.dist=1
2000010.nodeids.fallback=0

1000007.nodeids=0
1000007.nodeids.dist=1
1000007.nodeids.fallback=0

2000015.nodeids=0
2000015.nodeids.dist=1
2000015.nodeids.fallback=0

1000003.nodeids=0
1000003.nodeids.dist=1
1000003.nodeids.fallback=0

2000018.nodeids=0
2000018.nodeids.dist=1
2000018.nodeids.fallback=0

2000013.nodeids=0
2000013.nodeids.dist=1
2000013.nodeids.fallback=0

2000016.nodeids=0
2000016.nodeids.dist=1
2000016.nodeids.fallback=0

2000060.nodeids=0
2000060.nodeids.dist=1
2000060.nodeids.fallback=0

2000011.nodeids=0
2000011.nodeids.dist=1
2000011.nodeids.fallback=0

2000031.nodeids=0
2000031.nodeids.dist=1
2000031.nodeids.fallback=0

1000006.nodeids=0
1000006.nodeids.dist=1
1000006.nodeids.fallback=0

2000019.nodeids=0
2000019.nodeids.dist=1
2000019.nodeids.fallback=0

1000009.nodeids=0
1000009.nodeids.dist=1
1000009.nodeids.fallback=0

1000008.nodeids=0
1000008.nodeids.dist=1
1000008.nodeids.fallback=0

2000002.nodeids=0
2000002.nodeids.dist=1
2000002.nodeids.fallback=0

2000012.nodeids=0
2000012.nodeids.dist=1
2000012.nodeids.fallback=0

2000006.nodeids=0
2000006.nodeids.dist=1
2000006.nodeids.fallback=0





# Stale connection monitor parameters
# The monitor wakes up every monitor.interval seconds.
# It will log a warning if a connection has been checked out more than monitor.threshold seconds ago.
pool.monitor.enabled=true
pool.monitor.interval=300
pool.monitor.threshold=300

# Connection pool parameters
# max_size.enforced:        is the pool restrained to its max size
# max_size.extra:           how many connections above the max are allowed?
# max_size.retry.count:     how many times should we wait when we reach the max?
# max_size.retry.interval:  how long to sleep between retries when we reach the max (in ms)?
# max_reached.log:          should we log something when we reach the max?
# max_reached.interval:     minimum interval between logs when we reach the max (in seconds)
pool.max_size.enforced=true
pool.max_size.extra=0
pool.max_size.retry.count=20
pool.max_size.retry.interval=500
pool.max_reached.log=true
pool.max_reached.interval=300

# Pool optimizer parameters
# Set active=true to discard connections not in use for more than the window size.
# Window size is in ms.
# Min size is the minimum size the pool will keep
pool.min_size=2
pool.optimizer.active=true
pool.optimizer.window=3600000

# Connection Pool Statistics Configuration
# These settings allow us to obtain detailed information about the state of
# the dbconnection pool over time (total connections in the pool and how
# many of them are busy). The data is recorded every time the state of the
# pool changes.
# Once enabled, you can see this info via the stats
#       (e.g. http://snapfish:30701/stats/dbconnectionpool/)
#
# We decided not to manipulate these values via macro-expansion since we don't
# expect to do this across all the deployed servers. Instead
# we expect to manually modify the config on a few select servers
#

# By default the poolDetails are disabled.
pool.stats.details.enabled=true

# "minimized" means that we won't record a state change where:
#   (1) there are 0 busy connections
#   (2) the state is the same as the previously recorded state
pool.stats.details.minimized=true

# The storage for this detail information is limited and will "wrap around"
# when the reserved amount is filled. Keeping 4000 records per connection
# will use about 1MB of space per server.
pool.stats.details.record.cnt=10000

# Default separator is a space. Do NOT set this property if you want a space.
#pool.stats.details.separator=,

